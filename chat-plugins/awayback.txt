away: function (target, room, user, connection, cmd) {
		if (!toId(target)) target = 'Away';
		if (target.length > 8) return this.sendReply('Your away message can only be a maximum of 8 characters long.');
		var name = (user.awayName ? user.name.replace(RegExp('- ' + user.awayName, 'g'), g).trim() : user.name);//http://prntscr.com/8jtbf2
		var awayName = '';
		for (var i = 0; i < target.length; i++) awayName += charSet[target[i]] || '';
		user.awayName = awayName;
		user.forceRename(name + ' - ' + user.awayName, undefined, true);
		user.updateIdentity();
	},
	
	unafk: 'unafk',
	back: function(target, room, user, connection) {
		if (!user.awayName || user.name.indexOf(user.awayName) === -1) return this.sendReply('You are not set as away.');
		var name = user.name.replace(RegExp('- ' + user.awayName, 'g'), '');
		user.forceRename(name.trim(), undefined, true);
		delete user.awayName;
		user.updateIdentity();
	},
	var charSet = {'A': '\u24B6', 'B':'\u24B7', 'C':'\u24B8', 'D':'\u24B9', 'E':'\u24BA', 'F':'\u24BB', 'G':'\u24BC', 'H':'\u24BD', 'I':'\u24BE', 'J':'\u24BF',
	'K':'\u24C0', 'L':'\u24C1', 'M':'\u24C2', 'N':'\u24C3', 'O':'\u24C4', 'P':'\u24C5', 'Q':'\u24C6', 'R':'\u24C7', 'S':'\u24C8', 'T':'\u24C9', 'U':'\u24CA',
	'V':'\u24CB', 'W':'\u24CC', 'X':'\u24CD', 'Y':'\u24CE', 'Z':'\u24CF', 'a':'\u24D0', 'b':'\u24D1', 'c':'\u24D2', 'd':'\u24D3', 'e':'\u24D4', 'f':'\u24D5',
	'g':'\u24D6', 'h':'\u24D7', 'i':'\u24D8', 'j':'\u24D9', 'k':'\u24DA', 'l':'\u24DB', 'm':'\u24DC', 'n':'\u24DD', 'o':'\u24DE', 'p':'\u24DF', 'q':'\u24E0',
	'r':'\u24E1', 's':'\u24E2', 't':'\u24E3', 'u':'\u24E4', 'v':'\u24E5', 'w':'\u24E6', 'x':'\u24E7', 'y':'\u24E8', 'z': '\u24E9', '0':'\u24EA', '1':'\u2460',
	'2':'\u2461', '3':'\u2462', '4':'\u2463', '5':'\u2464', '6':'\u2465', '7':'\u2466', '8':'\u2467', '9':'\u2468'};
	
	function updateRating(p1, p2, result, room) {
	var elo = require('elo-rank')();
	var p1rank = Core.read('tourelo', p1.userid) || 1000;
	var p2rank = Core.read('tourelo', p2.userid) || 1000;
	var expP1 = elo.getExpected(p1rank, p2rank);
	var expP2 = elo.getExpected(p2rank, p1rank);
	newP1rank = (elo.updateRating(expP1, result, p1rank) < 1000 ? 1000 : elo.updateRating(expP1, result, p1rank));
	newP2rank = (elo.updateRating(expP2, Number(!result), p2rank) < 1000 ? 1000 : elo.updateRating(expP2, Number(!result), p2rank));
	Core.write('tourelo', p1.userid, newP1rank);
	Core.write('tourelo', p2.userid, newP2rank);
	
	var p1result, p2result;
	if (result) {
		p1result = '(+' + (newP1rank - p1rank) + ' for winning)';
		p2result = '(' + (newP2rank - p2rank) + ' for losing)';
	} else {
		p1result = '(' + (newP1rank - p1rank) + ' for losing)';
		p2result = '(+' + (newP2rank - p2rank) + ' for winning)';
	}
	room.add('|html|' + Tools.escapeHTML(p1.name) + '\'s rating: ' + p1rank + ' → <strong style = "color:gray">' + newP1rank + '</strong><br>' +
		p1result + '<br><br>' +
		Tools.escapeHTML(p2.name) + '\'s rating: ' + p2rank + ' → <strong style = "color:gray">' + newP2rank + '</strong><br>' +
		p2result
	);
	room.update();
}